{"version":3,"sources":["redux/reducers.js","redux/episodes/reducers.js","redux/store.js","components/Header/index.js","services/api.js","components/Collapse/index.js","components/Episode/index.js","redux/episodes/actions.js","components/AllEpisodes/index.js","App.js","index.js"],"names":["combineReducers","episodes","state","action","type","payload","store","createStore","reducers","Header","className","API","baseURL","get","endpoint","data","params","key","fetch","Collapse","children","open","onChange","title","useState","isOpen","setIsOpen","useEffect","toggle","useCallback","onClick","style","display","Episode","episode","onOpenChange","console","log","name","id","air_date","episodesFetched","connect","dispatch","isAllOpen","setIsAllOpen","a","response","json","results","fetchData","map","App","ReactDOM","render","document","getElementById"],"mappings":"iSAIeA,cAAgB,CAC7BC,SCLsB,WAAuB,IAAtBC,EAAqB,uDAAf,GAAIC,EAAW,uCAC5C,OAAOA,EAAOC,MACZ,IAAK,yBACH,OAAO,YAAID,EAAOE,SACpB,QACE,OAAOH,MCFAI,EAAQC,YAAYC,GCYlBC,G,MAXA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,iBAAd,sBACA,0BAAMA,UAAU,mBAAhB,2C,gCCTFC,EAAM,CACVC,QAAS,kCAETC,IAAK,SAACC,GAAuB,IAAbC,EAAY,uDAAP,GACfC,EAAS,IACb,IAAI,IAAMC,KAAOF,EACfC,GAAM,UAAOC,EAAP,YAAcF,EAAKE,GAAnB,KAGR,OAAOC,MAAM,GAAD,OAAIP,EAAIC,SAAR,OAAkBE,GAAlB,OAA6BE,MAI9BL,ICiBAQ,G,MA1BE,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAAW,EAE1BC,mBAASH,GAFiB,mBAE/CI,EAF+C,KAEvCC,EAFuC,KAItDC,qBAAU,WACRD,EAAUL,KACT,CAACA,IAEJ,IAAMO,EAASC,uBAAY,WACzBH,GAAWD,GACXH,EAASG,KACR,CAACA,IAEJ,OACE,yBAAKf,UAAU,YACb,yBAAKA,UAAU,kBACXa,EACF,4BAAQO,QAASF,GAASH,EAAS,IAAM,MAE3C,yBAAKf,UAAU,iBAAiBqB,MAAO,CAACC,QAASP,EAAS,QAAU,SAChEL,MCDKa,EAnBC,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,QAASb,EAAwB,EAAxBA,KAAMc,EAAkB,EAAlBA,aAI/B,OAFAC,QAAQC,IAAIH,GAGV,kBAAC,EAAD,CACEX,MAAOW,EAAQI,KACfjB,KAAMA,EACNC,SAAUa,GAEV,4BACE,4BAAI,uCAAJ,IAA0BD,EAAQK,IAClC,4BAAI,6CAAJ,IAAgCL,EAAQM,UACxC,4BAAI,4CAAJ,IAA+BN,EAAQA,YCjBlCO,EAAkB,SAACxC,GAAD,MAAe,CAC5CG,KAAM,yBACNC,QAASJ,ICmCIyC,eAAQ,kBAAiB,CAACzC,SAAlB,EAAEA,YAAVyC,EA7BK,SAAC,GAA0B,IAAzBzC,EAAwB,EAAxBA,SAAU0C,EAAc,EAAdA,SAAc,EACVnB,oBAAS,GADC,mBACrCoB,EADqC,KAC1BC,EAD0B,KAY5C,OATAlB,qBAAU,YACO,uCAAG,8BAAAmB,EAAA,sEACOnC,EAAIE,IAAI,YADf,cACVkC,EADU,gBAEGA,EAASC,OAFZ,OAEVjC,EAFU,OAGhB4B,EAASF,EAAgB1B,EAAKkC,UAHd,2CAAH,qDAKfC,KACC,IAGD,6BACE,6CAAkB,4BAAQpB,QAAS,kBAAMe,GAAcD,KAAaA,EAAY,IAAM,MACpF3C,GACAA,EAASkD,KAAI,SAACjB,GAAD,OACX,kBAAC,EAAD,CACEjB,IAAKiB,EAAQK,GACbL,QAASA,EACTb,KAAMuB,EACNT,aAAc,sBCRXiB,G,MAXH,WACV,OACE,6BACE,kBAAC,EAAD,MACA,0BAAM1C,UAAU,aACd,kBAAC,EAAD,UCRR2C,IAASC,OACP,kBAAC,IAAD,CAAUhD,MAAOA,GACf,kBAAC,EAAD,OAEFiD,SAASC,eAAe,W","file":"static/js/main.decb4eb9.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nimport { episodes } from \"./episodes/reducers\";\r\n\r\nexport default combineReducers({\r\n  episodes\r\n});","export const episodes = (state=[], action) => {\r\n  switch(action.type) {\r\n    case 'FETCH_EPISODES_SUCCESS':\r\n      return [...action.payload]\r\n    default:\r\n      return state\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(reducers);","import React from 'react'\r\n\r\nimport './style.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__body\">\r\n        <h1 className=\"header__title\">Rick and Morty app</h1>\r\n        <span className=\"header__credits\">Created by Artur Mędrygał</span>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","const API = {\r\n  baseURL: 'https://rickandmortyapi.com/api',\r\n\r\n  get: (endpoint, data={}) => {\r\n    let params = '?'\r\n    for(const key in data) {\r\n      params += `${key}=${data[key]}&`\r\n    }\r\n\r\n    return fetch(`${API.baseURL}${endpoint}${params}`)\r\n  }\r\n}\r\n\r\nexport default API","import React, { useCallback, useState, useEffect } from 'react'\r\n\r\nimport \"./style.scss\"\r\n\r\nconst Collapse = ({children, open, onChange, title}) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(open)\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open)\r\n  }, [open])\r\n\r\n  const toggle = useCallback(() => {\r\n    setIsOpen(!isOpen)\r\n    onChange(isOpen)\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <div className=\"collapse\">\r\n      <div className=\"collapse__head\">\r\n        { title }\r\n        <button onClick={toggle}>{isOpen ? '-' : '+'}</button>\r\n      </div>\r\n      <div className=\"collapse__body\" style={{display: isOpen ? 'block' : 'none'}}>\r\n        { children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Collapse","import React from 'react'\r\n\r\nimport Collapse from '../Collapse'\r\n\r\nconst Episode = ({episode, open, onOpenChange}) => {\r\n\r\n  console.log(episode);\r\n\r\n  return (\r\n    <Collapse\r\n      title={episode.name}\r\n      open={open}\r\n      onChange={onOpenChange}\r\n    >\r\n      <ul>\r\n        <li><strong>ID:</strong> {episode.id}</li>\r\n        <li><strong>Air date:</strong> {episode.air_date}</li>\r\n        <li><strong>Episode:</strong> {episode.episode}</li>\r\n      </ul>\r\n    </Collapse>\r\n  )\r\n}\r\n\r\nexport default Episode\r\n","export const episodesFetched = (episodes) => ({\r\n  type: 'FETCH_EPISODES_SUCCESS',\r\n  payload: episodes\r\n});","import React, { useEffect, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport API from '../../services/api'\r\nimport Episode from '../Episode/index'\r\n\r\nimport {episodesFetched} from '../../redux/episodes/actions'\r\n\r\nconst AllEpisodes = ({episodes, dispatch}) => {\r\n  const [isAllOpen, setIsAllOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await API.get('/episode')\r\n      const data = await response.json()\r\n      dispatch(episodesFetched(data.results))\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Episodes: <button onClick={() => setIsAllOpen(!isAllOpen)}>{isAllOpen ? '-' : '+'}</button></h2>\r\n      { episodes &&\r\n        episodes.map((episode) => (\r\n          <Episode\r\n            key={episode.id}\r\n            episode={episode}\r\n            open={isAllOpen}\r\n            onOpenChange={() => {}}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({episodes}) => ({episodes}))(AllEpisodes)\r\n","import React from \"react\";\r\n\r\nimport Header from './components/Header'\r\nimport AllEpisodes from './components/AllEpisodes'\r\n\r\nimport \"./App.scss\";\r\n\r\n/**\r\n * The App\r\n */\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <main className=\"container\">\r\n        <AllEpisodes />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport {store} from './redux/store'\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}