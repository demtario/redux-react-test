{"version":3,"sources":["redux/episodes/reducers.js","redux/characters/reducers.js","redux/reducers.js","redux/store.js","components/Header/index.js","services/api.js","components/Collapse/index.js","components/Character/index.js","redux/characters/actions.js","components/Episode/index.js","redux/episodes/actions.js","components/AllEpisodes/index.js","App.js","index.js"],"names":["initialState","perPage","pages","byId","combineReducers","episodes","state","action","type","allEpisodes","payload","results","forEach","episode","id","info","characters","allCharacters","character","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","Header","className","API","baseURL","get","endpoint","data","params","key","fetch","Collapse","children","open","onChange","title","useState","isOpen","setIsOpen","useEffect","toggle","useCallback","onClick","connect","name","image","src","alt","charactersFetched","onOpenChange","dispatch","air_date","useMemo","map","url","link","splitted","split","length","getIdFromLink","a","join","response","json","fetchData","episodesFetched","isAllOpen","setIsAllOpen","page","setPage","Object","keys","paginatedEpisodes","values","slice","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeb84e5b.chunk.js","sourcesContent":["const initialState = {\r\n  perPage: 20,\r\n  pages: 0,\r\n  byId: {}\r\n}\r\n\r\nexport const episodes = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'FETCH_EPISODES_SUCCESS':\r\n        const allEpisodes = state.byId\r\n        action.payload.results.forEach((episode) => {\r\n          allEpisodes[episode.id] = episode\r\n        })\r\n        state.pages = action.payload.info.pages\r\n        state.byId = allEpisodes\r\n      return {...state}\r\n    default:\r\n      return state\r\n  }\r\n}","const initialState = {\r\n  byId: {}\r\n}\r\n\r\nexport const characters = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'FETCH_CHARACTERS_SUCCESS':\r\n      const allCharacters = state.byId\r\n      action.payload.forEach((character) => {\r\n        allCharacters[character.id] = character\r\n      })\r\n      return {byId: allCharacters}\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { episodes } from \"./episodes/reducers\";\r\nimport { characters } from \"./characters/reducers\";\r\n\r\nexport default combineReducers({\r\n  episodes,\r\n  characters\r\n});","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react'\r\n\r\nimport './style.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__body\">\r\n        <h1 className=\"header__title\">Rick and Morty app</h1>\r\n        <span className=\"header__credits\">Created by Artur Mędrygał</span>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","const API = {\r\n  baseURL: 'https://rickandmortyapi.com/api',\r\n\r\n  get: (endpoint, data={}) => {\r\n    let params = '?'\r\n    for(const key in data) {\r\n      params += `${key}=${data[key]}&`\r\n    }\r\n\r\n    return fetch(`${API.baseURL}${endpoint}${params}`)\r\n  }\r\n}\r\n\r\nexport default API","import React, { useCallback, useState, useEffect } from 'react'\r\n\r\nimport \"./style.scss\"\r\n\r\nconst Collapse = ({children, open, onChange, title, className}) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(open)\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open)\r\n  }, [open])\r\n\r\n  const toggle = useCallback(() => {\r\n    setIsOpen(!isOpen)\r\n    onChange(!isOpen)\r\n  }, [isOpen, onChange])\r\n\r\n  return (\r\n    <div className={`collapse ${isOpen && 'collapse--open'}`}>\r\n      <div className=\"collapse__head\" onClick={toggle}>\r\n        { title }\r\n        <button className=\"collapse__button\">{isOpen ? 'A' : 'V'}</button>\r\n      </div>\r\n      <div className={`collapse__body ${className}`}>\r\n        { children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Collapse","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './style.scss'\r\n\r\nconst Character = ({id, characters}) => {\r\n  const {name, image} = characters.byId[id] || {}\r\n\r\n  return (\r\n    <div className=\"character\">\r\n      <img src={image} alt={name} className=\"character__image\"/>\r\n      <div className=\"character__name\">{ name || `[ID: ${id}]` }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({characters}) => ({characters}))(Character)","export const charactersFetched = (characters) => ({\r\n  type: 'FETCH_CHARACTERS_SUCCESS',\r\n  payload: characters\r\n});","import React, { useMemo } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport API from '../../services/api'\r\nimport Collapse from '../Collapse'\r\nimport Character from '../Character'\r\n\r\nimport {charactersFetched} from '../../redux/characters/actions'\r\n\r\nimport './style.scss'\r\n\r\nconst getIdFromLink = (link) => {\r\n  const splitted = link.split('/')\r\n  return splitted[splitted.length-1]\r\n}\r\n\r\nconst Episode = ({episode, open, onOpenChange, dispatch}) => {\r\n\r\n  const { id, name, air_date } = episode\r\n\r\n  const characters = useMemo(() => (\r\n    episode.characters.map((url) => getIdFromLink(url))\r\n  ), [episode.characters])\r\n\r\n  const onOpen = (isOpen) => {\r\n    if(!isOpen) { return }\r\n\r\n    const fetchData = async () => {\r\n      const response = await API.get(`/character/${characters.join(',')}`)\r\n      const data = await response.json()\r\n      dispatch(charactersFetched(data))\r\n    }\r\n    fetchData()\r\n    onOpenChange(isOpen)\r\n  }\r\n\r\n  return (\r\n    <Collapse\r\n      title={`Episode ${id}`}\r\n      open={open}\r\n      onChange={onOpen}\r\n      className=\"episode\"\r\n    >\r\n      <ul className=\"episode__properties\">\r\n        <li><strong>ID</strong> <span>{id}</span></li>\r\n        <li><strong>Name</strong> <span>{name}</span></li>\r\n        <li><strong>Air date</strong> <span>{air_date}</span></li>\r\n        <li><strong>Episode</strong> <span>{episode.episode}</span></li>\r\n        <li><strong>Characters</strong></li>\r\n      </ul>\r\n      <div className=\"episode__characters\">\r\n        { characters &&\r\n          characters\r\n            .map((id) => (\r\n              <Character key={id} id={id} />\r\n            ))\r\n        }\r\n      </div>\r\n    </Collapse>\r\n  )\r\n}\r\n\r\nexport default connect(() => ({}))(Episode)\r\n","export const episodesFetched = (episodes) => ({\r\n  type: 'FETCH_EPISODES_SUCCESS',\r\n  payload: episodes\r\n});","import React, { useEffect, useState, useMemo } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport API from '../../services/api'\r\nimport Episode from '../Episode/index'\r\n\r\nimport {episodesFetched} from '../../redux/episodes/actions'\r\n\r\nimport './style.scss'\r\n\r\nconst AllEpisodes = ({episodes, dispatch}) => {\r\n  const [isAllOpen, setIsAllOpen] = useState(false)\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    // Don't fetchs episodes that are already downloaded\r\n    if(Object.keys(episodes.byId).length >= page * episodes.perPage) { return }\r\n\r\n    const fetchData = async () => {\r\n      const response = await API.get('/episode', {page})\r\n      const data = await response.json()\r\n      dispatch(episodesFetched(data))\r\n    }\r\n    fetchData()\r\n  }, [page])\r\n\r\n  const paginatedEpisodes = useMemo(() => {\r\n    return Object\r\n      .values(episodes.byId)\r\n      .slice((page-1)*episodes.perPage, page*episodes.perPage)\r\n  }, [episodes, page])\r\n\r\n  return (\r\n    <div className=\"episodes-list\">\r\n      <h2 className=\"episodes-list__title\">\r\n        All Episodes:\r\n        <span\r\n          className=\"link\"\r\n          onClick={() => setIsAllOpen(!isAllOpen)}\r\n        >\r\n          {isAllOpen ? 'collapse all' : 'show all'}\r\n        </span>\r\n      </h2>\r\n\r\n      <div className=\"episodes-list__episodes\">\r\n        { paginatedEpisodes &&\r\n          paginatedEpisodes.map((episode) => (\r\n            <Episode\r\n              key={episode.id}\r\n              episode={episode}\r\n              open={isAllOpen}\r\n              onOpenChange={() => {}}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className=\"episodes-list__pagination\">\r\n        <span\r\n          className={`link ${page === 1 && 'link--disabled'}`}\r\n          onClick={() => setPage(page-1)}\r\n        >\r\n          prev page\r\n        </span>\r\n        {' |'}\r\n        <span\r\n          className={`link ${page === episodes.pages && 'link--disabled'}`}\r\n          onClick={() => setPage(page+1)}\r\n        >\r\n          next page\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({episodes}) => ({episodes}))(AllEpisodes)\r\n","import React from \"react\";\r\n\r\nimport Header from './components/Header'\r\nimport AllEpisodes from './components/AllEpisodes'\r\n\r\nimport \"./App.scss\";\r\n\r\n/**\r\n * The App\r\n */\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <main className=\"container\">\r\n        <AllEpisodes />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport {store} from './redux/store'\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}